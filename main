import os
from dotenv import load_dotenv
import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters

load_dotenv()

def get_gigachat_token():
    url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
    headers = {
        "Authorization": f"Basic {os.getenv('GIGACHAT_CLIENT_ID')}:{os.getenv('GIGACHAT_CLIENT_SECRET')}",
        "RqUID": "123456789",
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = {"scope": "GIGACHAT_API_PERS"}
    response = requests.post(url, headers=headers, data=data, verify=False)
    return response.json().get("access_token")

def ask_gigachat(prompt, token):
    url = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }
    data = {
        "model": "GigaChat-Pro",
        "messages": [{"role": "user", "content": prompt}]
    }
    response = requests.post(url, headers=headers, json=data, verify=False)
    return response.json().get("choices", [{}])[0].get("message", {}).get("content", "Ошибка")

async def start(update: Update, context):
    await update.message.reply_text("Привет! Я бот на базе GigaChat. Задайте вопрос.")

async def handle_message(update: Update, context):
    token = get_gigachat_token()
    response = ask_gigachat(update.message.text, token)
    await update.message.reply_text(response)

def main():
    app = Application.builder().token(os.getenv("TELEGRAM_BOT_TOKEN")).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    app.run_polling()

if __name__ == "__main__":
    main()
